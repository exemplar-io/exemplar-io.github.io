{"version":3,"sources":["components/UI/Spinner/Spinner.module.css","api/requests/deleteRepos.ts","api/api.tsx","components/UI/PrimaryButton.tsx","components/UI/PrimaryInputField.tsx","components/UI/Spinner/Spinner.tsx","pages/Home.tsx","api/requests/auth.ts","api/requests/createRepo.ts","components/UI/NavigationBar/NavigationBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","deleteRepos","msRepoName","apiRepoName","frontendRepoName","rootRepoName","githubToken","a","axios","delete","response","console","log","data","instance","create","baseURL","PrimaryButton","title","onClick","disabled","className","PrimaryInputField","id","placeholder","error","value","onChange","borderColor","type","Spinner","styles","loader","Home","useState","token","setToken","setRepoName","setApiRepoName","setFrontendRepoName","setRootRepoName","repoLink","setRepoLink","setError","loading","setLoading","code","URLSearchParams","useLocation","search","get","useEffect","post","githubCode","then","api","onDeleteReposClick","catch","window","location","href","hidden","event","target","rootUrl","err","status","open","theme","dracula","text","language","showLineNumbers","startingLineNumber","NavigationBar","React","navbarOpen","setNavbarOpen","App","path","component","Homepage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1b336e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__fTuX5\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","import axios from '../api';\n\nexport const deleteRepos = async (\n  msRepoName: string,\n  apiRepoName: string,\n  frontendRepoName: string,\n  rootRepoName: string,\n  githubToken: string,\n) => {\n  const response = await axios.delete(\n    `/github/repo?msRepo=${msRepoName}&apiRepo=${apiRepoName}&frontendRepo=${frontendRepoName}&rootRepo=${rootRepoName}&token=${githubToken}`,\n  );\n  console.log(response);\n\n  return response.data;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'http://3.70.171.250/',\n});\n\nexport default instance;\n\nexport { auth } from './requests/auth';\nexport { createRepo } from './requests/createRepo';\nexport { deleteRepos } from './requests/deleteRepos';\n","import React from 'react';\n\ntype PrimaryButtonProps = {\n  title: string;\n  onClick: () => void;\n  disabled?: boolean;\n};\n\nconst PrimaryButton = ({ title, onClick, disabled }: PrimaryButtonProps) => {\n  return (\n    <button\n      className=\"bg-primary-500 shadow hover:bg-primary-400 disabled:cursor-not-allowed disabled:bg-primary-500 focus:shadow-outline focus:outline-none text-secondary font-bold py-2 px-4 rounded\"\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default PrimaryButton;\n","import React, { ChangeEvent } from 'react';\n\ntype PrimaryInputProps = {\n  id: string;\n  placeholder: string;\n  error: string;\n  value: string;\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst PrimaryInputField = ({\n  id,\n  placeholder,\n  error,\n  value,\n  onChange,\n}: PrimaryInputProps) => {\n  let borderColor = 'border-primary-500';\n  if (error) borderColor = 'border-error';\n\n  return (\n    <input\n      className={\n        'shadow appearance-none border-2 ' +\n        borderColor +\n        ' rounded py-2 px-3 text-primary-500 leading-tight focus:outline-none focus:shadow-outline'\n      }\n      id={id}\n      type=\"text\"\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default PrimaryInputField;\n","import React from 'react';\nimport styles from './Spinner.module.css';\n\nconst Spinner = () => {\n  return <div className={styles.loader} />;\n};\n\nexport default Spinner;\n","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as api from '../api/api';\nimport PrimaryButton from '../components/UI/PrimaryButton';\nimport PrimaryInputField from '../components/UI/PrimaryInputField';\nimport Spinner from '../components/UI/Spinner/Spinner';\nimport { CopyBlock, dracula } from 'react-code-blocks';\n\nconst Home = () => {\n  const [token, setToken] = useState('');\n  const [msRepoName, setRepoName] = useState('');\n  const [apiRepoName, setApiRepoName] = useState('');\n  const [frontendRepoName, setFrontendRepoName] = useState('');\n  const [rootRepoName, setRootRepoName] = useState('');\n  const [repoLink, setRepoLink] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const query = new URLSearchParams(useLocation().search);\n  const code = query.get('code');\n\n  useEffect(() => {\n    if (code) {\n      api.auth(code).then((token) => {\n        setToken(token);\n      });\n    }\n  }, [code]);\n\n  const onAuthClick = () =>\n    (window.location.href =\n      'https://github.com/login/oauth/authorize?client_id=e78392cb4d38b6f34b4b&scope=repo delete_repo workflow');\n\n  const onOpenRepoClick = () => window.open(repoLink);\n\n  const onRepoNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setError('');\n    setRepoName(event.target.value);\n  };\n\n  const onApiRepoNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setError('');\n    setApiRepoName(event.target.value);\n  };\n\n  const onFrontendRepoNameInputChange = (\n    event: ChangeEvent<HTMLInputElement>,\n  ) => {\n    setError('');\n    setFrontendRepoName(event.target.value);\n  };\n\n  const onRootRepoNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setError('');\n    setRootRepoName(event.target.value);\n  };\n\n  const onCreateRepoClick = () => {\n    setLoading(true);\n    api\n      .createRepo(\n        msRepoName,\n        apiRepoName,\n        frontendRepoName,\n        rootRepoName,\n        token,\n      )\n      .then((repoLink) => {\n        setLoading(false);\n        setRepoLink(repoLink);\n      })\n      .catch((err) => {\n        if (err.response.status === 422)\n          setError(\n            'Oh no! One or more of the repository names were already taken! 😮 Find a new name and try again!',\n          );\n        setRepoLink('');\n        setLoading(false);\n      });\n  };\n\n  const onDeleteReposClick = async () => {\n    api\n      .deleteRepos(\n        msRepoName,\n        apiRepoName,\n        frontendRepoName,\n        rootRepoName,\n        token,\n      )\n      .then(() => {\n        setError('');\n        setRepoLink('');\n      })\n      .catch(() => {\n        setError(\n          'Oh no! One or more of the repositories could not be deleted! 😮 Please try again later',\n        );\n      });\n  };\n\n  return (\n    <main className={'container mx-auto w-2/6 space-y-10 pb-20 pt-20'}>\n      <h1 className=\"text-secondary text-4xl\">Peareasy Elastics 🔥</h1>\n      <h3 className=\"text-secondary text-xl\">\n        In order for us to be able to create an awesome project template for\n        you, we need you to authorize your Github account with us.\n      </h3>\n      <div>\n        <PrimaryButton\n          disabled={!!token}\n          onClick={onAuthClick}\n          title={!token ? 'Authorize Github' : 'You have authorized Github 🎉'}\n        />\n      </div>\n\n      {!!token ? (\n        <>\n          <h3 className=\"text-secondary text-xl\">\n            Cool! The next step is to choose a root project name, a microservice\n            repo name and a API gateway repo name 😎\n          </h3>\n\n          <div className=\"space-y-3\">\n            <div hidden={!error}>\n              <p className=\"text-error text-xl\">{error}</p>\n            </div>\n\n            <div>\n              <PrimaryInputField\n                id=\"rootRepoName\"\n                error={error}\n                placeholder=\"Root Repository name\"\n                value={rootRepoName}\n                onChange={onRootRepoNameInputChange}\n              />\n            </div>\n            <div>\n              <PrimaryInputField\n                id=\"username\"\n                error={error}\n                placeholder=\"MS Repository name\"\n                value={msRepoName}\n                onChange={onRepoNameInputChange}\n              />\n            </div>\n            <div>\n              <PrimaryInputField\n                id=\"apiRepoName\"\n                error={error}\n                placeholder=\"Api Repository name\"\n                value={apiRepoName}\n                onChange={onApiRepoNameInputChange}\n              />\n            </div>\n            <div>\n              <PrimaryInputField\n                id=\"frontendRepoName\"\n                error={error}\n                placeholder=\"Frontend Repository name\"\n                value={frontendRepoName}\n                onChange={onFrontendRepoNameInputChange}\n              />\n            </div>\n            <div>\n              <PrimaryButton\n                title=\"Create Repositories\"\n                onClick={onCreateRepoClick}\n                disabled={!token || !msRepoName}\n              />\n            </div>\n            <div>\n              <PrimaryButton\n                title=\"Delete Repositories\"\n                onClick={onDeleteReposClick}\n              />\n            </div>\n            <div>{loading ? <Spinner /> : null}</div>\n          </div>\n\n          {repoLink ? (\n            <>\n              <div>\n                <h3 className=\"text-secondary text-xl\">\n                  Alright, this is it. Here's the link to your new Github repo!\n                  👊🏼\n                </h3>\n              </div>\n              <div>\n                <PrimaryButton\n                  title=\"Open Root Repository\"\n                  onClick={onOpenRepoClick}\n                />\n              </div>\n              <div>\n                <h3 className=\"text-secondary text-xl\">\n                  To download the entire project, open a terminal and paste and\n                  execute the command below!\n                </h3>\n              </div>\n              <div>\n                <CopyBlock\n                  theme={dracula}\n                  text={`git clone --recurse-submodules -j8 ${repoLink}`}\n                  language={'shell'}\n                  showLineNumbers={false}\n                  startingLineNumber={1}\n                />\n              </div>\n              <div>\n                <h3 className=\"text-secondary text-xl\">\n                  Now navigate to the project folder and run the entire\n                  project!🍾🥂🥳\n                </h3>\n              </div>\n              <div>\n                <CopyBlock\n                  theme={dracula}\n                  text={`cd ${rootRepoName} \\n&& docker-compose up`}\n                  language={'shell'}\n                  showLineNumbers={false}\n                  startingLineNumber={1}\n                />\n              </div>\n            </>\n          ) : null}\n        </>\n      ) : null}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from '../api';\n\nexport const auth = (code: string) => {\n  return axios.post('/github/auth', { githubCode: code }).then((response) => {\n    return response.data;\n  });\n};\n","import axios from '../api';\n\nexport const createRepo = (\n  msRepoName: string,\n  apiRepoName: string,\n  frontendRepoName: string,\n  rootRepoName: string,\n  githubToken: string,\n) => {\n  console.log(msRepoName);\n  console.log(rootRepoName);\n  console.log(githubToken);\n\n  return axios\n    .post('/github/repo', {\n      msRepoName,\n      apiRepoName,\n      frontendRepoName,\n      rootRepoName,\n      githubToken,\n    })\n    .then((response) => response.data.rootUrl);\n};\n","import React from 'react';\n\nconst NavigationBar = () => {\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\n  return (\n    <>\n      <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-primary-500 mb-3\">\n        <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\n          <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\n            <a\n              className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-secondary\"\n              href=\"#pablo\"\n            >\n              Peareasy Elastics\n            </a>\n            <button\n              className=\"text-secondary cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\n              type=\"button\"\n              onClick={() => setNavbarOpen(!navbarOpen)}\n            >\n              <i className=\"fas fa-bars\"></i>\n            </button>\n          </div>\n          <div\n            className={\n              'lg:flex flex-grow items-center' +\n              (navbarOpen ? ' flex' : ' hidden')\n            }\n            id=\"example-navbar-danger\"\n          >\n            <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-secondary hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-facebook-square text-lg leading-lg text-secondary opacity-75\"></i>\n                  <span className=\"ml-2\">Share</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-secondary hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-twitter text-lg leading-lg text-secondary opacity-75\"></i>\n                  <span className=\"ml-2\">Tweet</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-secondary hover:opacity-75\"\n                  href=\"#pablo\"\n                >\n                  <i className=\"fab fa-pinterest text-lg leading-lg text-secondary opacity-75\"></i>\n                  <span className=\"ml-2\">Pin</span>\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Homepage from './pages/Home';\nimport NavigationBar from './components/UI/NavigationBar/NavigationBar';\n\nfunction App() {\n  return (\n    <div className=\"min-h-screen bg-gray-800 text-center\">\n      <NavigationBar />\n      <BrowserRouter>\n        <Switch>\n          <Route path={'/'} component={Homepage} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}