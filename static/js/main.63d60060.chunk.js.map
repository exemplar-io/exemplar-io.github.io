{"version":3,"sources":["components/UI/Spinner/Spinner.module.css","api/requests/deleteRepos.ts","api/api.tsx","components/UI/PrimaryButton.tsx","components/UI/PrimaryInputField.tsx","components/UI/Spinner/Spinner.tsx","pages/Home.tsx","api/requests/auth.ts","api/requests/createRepo.ts","pages/Docs.tsx","pages/About.tsx","components/UI/NavigationBar/NavigationItem.tsx","components/UI/NavigationBar/ExternalNavigationItem.tsx","components/icons.js","components/UI/NavigationBar/NavigationBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","deleteRepos","projectName","githubToken","a","axios","delete","response","data","instance","create","baseURL","process","PrimaryButton","title","onClick","disabled","className","PrimaryInputField","id","placeholder","error","value","onChange","borderColor","type","Spinner","styles","loader","Home","useState","token","setToken","setRootRepoName","repoLink","setRepoLink","setError","loading","setLoading","code","URLSearchParams","useLocation","search","get","useEffect","post","githubCode","then","api","onDeleteReposClick","catch","window","location","href","hidden","event","target","rootUrl","err","status","open","theme","dracula","text","language","showLineNumbers","startingLineNumber","Docs","About","NavigationItem","link","children","to","ExternalNavigationItem","menu","fill","xmlns","viewBox","width","height","d","NavigationBar","React","navbarOpen","setNavbarOpen","menuIcon","App","path","component","Homepage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d60060.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__2kcJ5\",\"load6\":\"Spinner_load6__1FUIo\",\"round\":\"Spinner_round__1ccAA\"};","import axios from '../api';\r\n\r\nexport const deleteRepos = async (projectName: string, githubToken: string) => {\r\n  const response = await axios.delete(\r\n    `/github/repo?projectName=${projectName}&token=${githubToken}`,\r\n  );\r\n  return response.data;\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL,\r\n});\r\n\r\nexport default instance;\r\n\r\nexport { auth } from './requests/auth';\r\nexport { createRepo } from './requests/createRepo';\r\nexport { deleteRepos } from './requests/deleteRepos';\r\n","import React from 'react';\r\n\r\ntype PrimaryButtonProps = {\r\n  title: string;\r\n  onClick: () => void;\r\n  disabled?: boolean;\r\n};\r\n\r\nconst PrimaryButton = ({ title, onClick, disabled }: PrimaryButtonProps) => {\r\n  return (\r\n    <button\r\n      className=\"bg-primary-500 shadow hover:bg-primary-400 disabled:cursor-not-allowed disabled:bg-primary-500 focus:shadow-outline focus:outline-none text-secondary font-bold py-2 px-4 rounded\"\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PrimaryButton;\r\n","import React, { ChangeEvent } from 'react';\r\n\r\ntype PrimaryInputProps = {\r\n  id: string;\r\n  placeholder: string;\r\n  error: string;\r\n  value: string;\r\n  onChange: (event: ChangeEvent<HTMLInputElement>) => void;\r\n};\r\n\r\nconst PrimaryInputField = ({\r\n  id,\r\n  placeholder,\r\n  error,\r\n  value,\r\n  onChange,\r\n}: PrimaryInputProps) => {\r\n  let borderColor = 'border-primary-500';\r\n  if (error) borderColor = 'border-error';\r\n\r\n  return (\r\n    <input\r\n      className={\r\n        'shadow appearance-none border-2 ' +\r\n        borderColor +\r\n        ' rounded py-2 px-3 text-primary-500 leading-tight focus:outline-none focus:shadow-outline'\r\n      }\r\n      id={id}\r\n      type=\"text\"\r\n      placeholder={placeholder}\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrimaryInputField;\r\n","import React from 'react';\r\nimport styles from './Spinner.module.css';\r\n\r\nconst Spinner = () => {\r\n  return <div className={styles.loader} />;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport * as api from '../api/api';\r\nimport PrimaryButton from '../components/UI/PrimaryButton';\r\nimport PrimaryInputField from '../components/UI/PrimaryInputField';\r\nimport Spinner from '../components/UI/Spinner/Spinner';\r\nimport { CopyBlock, dracula } from 'react-code-blocks';\r\n\r\nconst Home = () => {\r\n  const [token, setToken] = useState('');\r\n  const [projectName, setRootRepoName] = useState('');\r\n  const [repoLink, setRepoLink] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const query = new URLSearchParams(useLocation().search);\r\n  const code = query.get('code');\r\n\r\n  useEffect(() => {\r\n    if (code) {\r\n      api.auth(code).then((token) => {\r\n        setToken(token);\r\n      });\r\n    }\r\n  }, [code]);\r\n\r\n  const onAuthClick = () =>\r\n    (window.location.href =\r\n      'https://github.com/login/oauth/authorize?client_id=' +\r\n      process.env.REACT_APP_GITHUB_CLIENT_ID +\r\n      '&scope=repo delete_repo workflow');\r\n\r\n  const onOpenRepoClick = () => window.open(repoLink);\r\n\r\n  const onProjectNameInputChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setError('');\r\n    setRootRepoName(event.target.value);\r\n  };\r\n\r\n  const onCreateRepoClick = () => {\r\n    setLoading(true);\r\n    api\r\n      .createRepo(projectName, token)\r\n      .then((repoLink) => {\r\n        setLoading(false);\r\n        setRepoLink(repoLink);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response.status === 422)\r\n          setError(\r\n            'Oh no! Project name was already occupied on your Github account! 😮 Find a new name and try again!',\r\n          );\r\n        setRepoLink('');\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onDeleteReposClick = async () => {\r\n    api\r\n      .deleteRepos(projectName, token)\r\n      .then(() => {\r\n        setError('');\r\n        setRepoLink('');\r\n      })\r\n      .catch(() => {\r\n        setError(\r\n          'Oh no! One or more of the repositories could not be deleted! 😮 Please try again later',\r\n        );\r\n      });\r\n  };\r\n\r\n  return (\r\n    <main className={'container mx-auto w-2/6 space-y-10 pb-20 pt-20'}>\r\n      <h1 className=\"text-secondary text-4xl\">Peareasy Elastics 🔥</h1>\r\n      <h3 className=\"text-secondary text-xl\">\r\n        In order for us to be able to create an awesome project template for\r\n        you, we need you to authorize your Github account with us.\r\n      </h3>\r\n      <div>\r\n        <PrimaryButton\r\n          disabled={!!token}\r\n          onClick={onAuthClick}\r\n          title={!token ? 'Authorize Github' : 'You have authorized Github 🎉'}\r\n        />\r\n      </div>\r\n\r\n      {!!token ? (\r\n        <>\r\n          <h3 className=\"text-secondary text-xl\">\r\n            Cool! The next step is to choose a root project name, a microservice\r\n            repo name and a API gateway repo name 😎\r\n          </h3>\r\n\r\n          <div className=\"space-y-3\">\r\n            <div hidden={!error}>\r\n              <p className=\"text-error text-xl\">{error}</p>\r\n            </div>\r\n\r\n            <div>\r\n              <PrimaryInputField\r\n                id=\"projectName\"\r\n                error={error}\r\n                placeholder=\"Project name\"\r\n                value={projectName}\r\n                onChange={onProjectNameInputChange}\r\n              />\r\n            </div>\r\n            <div>\r\n              <PrimaryButton\r\n                title=\"Create Repositories\"\r\n                onClick={onCreateRepoClick}\r\n                disabled={!token || !projectName}\r\n              />\r\n            </div>\r\n            <div>\r\n              <PrimaryButton\r\n                title=\"Delete Repositories\"\r\n                onClick={onDeleteReposClick}\r\n              />\r\n            </div>\r\n            <div>{loading ? <Spinner /> : null}</div>\r\n          </div>\r\n\r\n          {repoLink ? (\r\n            <>\r\n              <div>\r\n                <h3 className=\"text-secondary text-xl\">\r\n                  Alright, this is it. Here's the link to your new Github repo!\r\n                  👊🏼\r\n                </h3>\r\n              </div>\r\n              <div>\r\n                <PrimaryButton\r\n                  title=\"Open Root Repository\"\r\n                  onClick={onOpenRepoClick}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-secondary text-xl\">\r\n                  To download the entire project, open a terminal and paste and\r\n                  execute the command below!\r\n                </h3>\r\n              </div>\r\n              <div>\r\n                <CopyBlock\r\n                  theme={dracula}\r\n                  text={`git clone --recurse-submodules -j8 ${repoLink}`}\r\n                  language={'shell'}\r\n                  showLineNumbers={false}\r\n                  startingLineNumber={1}\r\n                />\r\n              </div>\r\n              <div>\r\n                <h3 className=\"text-secondary text-xl\">\r\n                  Now navigate to the project folder and run the entire\r\n                  project!🍾🥂🥳\r\n                </h3>\r\n              </div>\r\n              <div>\r\n                <CopyBlock\r\n                  theme={dracula}\r\n                  text={`cd ${projectName} \\n&& docker-compose up`}\r\n                  language={'shell'}\r\n                  showLineNumbers={false}\r\n                  startingLineNumber={1}\r\n                />\r\n              </div>\r\n            </>\r\n          ) : null}\r\n        </>\r\n      ) : null}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from '../api';\r\n\r\nexport const auth = (code: string) => {\r\n  return axios.post('/github/auth', { githubCode: code }).then((response) => {\r\n    return response.data;\r\n  });\r\n};\r\n","import axios from '../api';\r\n\r\nexport const createRepo = (projectName: string, githubToken: string) =>\r\n  axios\r\n    .post('/github/repo', {\r\n      projectName,\r\n      githubToken,\r\n    })\r\n    .then((response) => response.data.rootUrl);\r\n","import React from 'react';\r\n\r\nconst Docs = () => <></>;\r\n\r\nexport default Docs;\r\n","import React from 'react';\r\n\r\nconst About = () => <></>;\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype NavigationItemProps = {\r\n  link: string;\r\n  onClick: () => void;\r\n  children: string;\r\n};\r\n\r\nconst NavigationItem = ({ link, onClick, children }: NavigationItemProps) => (\r\n  <NavLink\r\n    to={link}\r\n    className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-secondary hover:opacity-75\"\r\n    onClick={onClick}\r\n  >\r\n    <span className=\"ml-2\">{children}</span>\r\n  </NavLink>\r\n);\r\n\r\nexport default NavigationItem;\r\n","import React from 'react';\r\n\r\ntype ExternalNavigationItemProps = {\r\n  link: string;\r\n  children: string;\r\n};\r\n\r\nconst ExternalNavigationItem = ({\r\n  link,\r\n  children,\r\n}: ExternalNavigationItemProps) => (\r\n  <button\r\n    className=\"px-3 py-2 flex items-center text-xs uppercase font-bold leading-snug text-secondary hover:opacity-75\"\r\n    onClick={() => window.open(link)}\r\n  >\r\n    <span className=\"ml-2\">{children}</span>\r\n  </button>\r\n);\r\n\r\nexport default ExternalNavigationItem;\r\n","import React from 'react';\r\n\r\nexport const menu = (\r\n  <svg\r\n    fill=\"#ffffff\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 30 30\"\r\n    width=\"30px\"\r\n    height=\"30px\"\r\n  >\r\n    <path d=\"M 3 7 A 1.0001 1.0001 0 1 0 3 9 L 27 9 A 1.0001 1.0001 0 1 0 27 7 L 3 7 z M 3 14 A 1.0001 1.0001 0 1 0 3 16 L 27 16 A 1.0001 1.0001 0 1 0 27 14 L 3 14 z M 3 21 A 1.0001 1.0001 0 1 0 3 23 L 27 23 A 1.0001 1.0001 0 1 0 27 21 L 3 21 z\" />\r\n  </svg>\r\n);\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport NavigationItem from './NavigationItem';\r\nimport ExternalNavigationItem from './ExternalNavigationItem';\r\nimport { menu as menuIcon } from '../../icons';\r\n\r\nconst NavigationBar = () => {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(false);\r\n  return (\r\n    <nav className=\"relative flex flex-wrap items-center justify-between px-2 py-3 bg-primary-500 mb-3\">\r\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n        <div className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\">\r\n          <NavLink\r\n            className=\"text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-nowrap uppercase text-secondary\"\r\n            to={'/'}\r\n          >\r\n            Peareasy Elastics\r\n          </NavLink>\r\n          <button\r\n            className=\"text-secondary cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n            type=\"button\"\r\n            onClick={() => setNavbarOpen(!navbarOpen)}\r\n          >\r\n            {menuIcon}\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={\r\n            'lg:flex flex-grow items-center' +\r\n            (navbarOpen ? ' flex' : ' hidden')\r\n          }\r\n          id=\"example-navbar-danger\"\r\n        >\r\n          <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n            <NavigationItem\r\n              link={'/docs'}\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              docs\r\n            </NavigationItem>\r\n            <NavigationItem\r\n              link={'/about'}\r\n              onClick={() => setNavbarOpen(!navbarOpen)}\r\n            >\r\n              about\r\n            </NavigationItem>\r\n            <ExternalNavigationItem\r\n              link={'https://github.com/peareasy-elastics'}\r\n            >\r\n              github\r\n            </ExternalNavigationItem>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Homepage from './pages/Home';\r\nimport Docs from './pages/Docs';\r\nimport About from './pages/About';\r\nimport NavigationBar from './components/UI/NavigationBar/NavigationBar';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-800 text-center\">\r\n      <BrowserRouter>\r\n        <NavigationBar />\r\n        <Switch>\r\n          <Route path={'/docs'} component={Docs} />\r\n          <Route path={'/about'} component={About} />\r\n          <Route path={'/'} component={Homepage} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}